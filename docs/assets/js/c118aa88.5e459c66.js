"use strict";(self.webpackChunktfaction=self.webpackChunktfaction||[]).push([[1859],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return c}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),u=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},s=function(e){var r=u(e.components);return n.createElement(l.Provider,{value:r},e.children)},f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=u(t),c=a,d=m["".concat(l,".").concat(c)]||m[c]||f[c]||o;return t?n.createElement(d,p(p({ref:r},s),{},{components:t})):n.createElement(d,p({ref:r},s))}));function c(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,p=new Array(o);p[0]=m;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var u=2;u<o;u++)p[u]=t[u];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},726:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return s},default:function(){return m}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),p=["components"],i={sidebar_position:700},l="Support skipping `terraform plan` and `terraform apply` in case of pull request by Renovate",u={unversionedId:"feature/support-skipping-terraform-renovate-pr",id:"feature/support-skipping-terraform-renovate-pr",title:"Support skipping `terraform plan` and `terraform apply` in case of pull request by Renovate",description:"#151 #153",source:"@site/docs/feature/support-skipping-terraform-renovate-pr.md",sourceDirName:"feature",slug:"/feature/support-skipping-terraform-renovate-pr",permalink:"/tfaction/docs/feature/support-skipping-terraform-renovate-pr",editUrl:"https://github.com/suzuki-shunsuke/tfaction-docs/edit/main/docs/feature/support-skipping-terraform-renovate-pr.md",tags:[],version:"current",sidebarPosition:700,frontMatter:{sidebar_position:700},sidebar:"tutorialSidebar",previous:{title:"Validate Terraform Plan Result with Conftest",permalink:"/tfaction/docs/feature/conftest"},next:{title:"Auto Fix .terraform.lock.hcl and Terraform Configuration",permalink:"/tfaction/docs/feature/auto-fix"}},s=[{value:"How to use",id:"how-to-use",children:[],level:2}],f={toc:s};function m(e){var r=e.components,t=(0,a.Z)(e,p);return(0,o.kt)("wrapper",(0,n.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"support-skipping-terraform-plan-and-terraform-apply-in-case-of-pull-request-by-renovate"},"Support skipping ",(0,o.kt)("inlineCode",{parentName:"h1"},"terraform plan")," and ",(0,o.kt)("inlineCode",{parentName:"h1"},"terraform apply")," in case of pull request by Renovate"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/tfaction/issues/151"},"#151")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/tfaction/issues/153"},"#153")),(0,o.kt)("p",null,"tfaction suports skipping ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform plan")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform apply")," in case of pull request by Renovate."),(0,o.kt)("p",null,"Basically in tfaction's workflow ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform plan")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform apply")," are run.\nBut you don't have to run ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform plan")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform apply")," when some dependencies such as tfsec and tflint are updated.\nOn the other hand, when Terraform and Terraform Providers are updated, you have to run ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform plan")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform apply"),"."),(0,o.kt)("p",null,"By skipping ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform plan")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform apply"),", you can efficiently update dependencies."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You can prevent unexpected changes from being applied"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/tfaction/docs/feature/renovate"},"You can prevent CI failure due to ",(0,o.kt)("inlineCode",{parentName:"a"},"terraform plan"),"'s unexpected changes")),(0,o.kt)("li",{parentName:"ul"},"You can prevent API rate exceeded by ",(0,o.kt)("inlineCode",{parentName:"li"},"terraform plan")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"terraform apply"))),(0,o.kt)("h2",{id:"how-to-use"},"How to use"),(0,o.kt)("p",null,"To enable this feature, set ",(0,o.kt)("inlineCode",{parentName:"p"},"skip_terraform_by_renovate")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"tfaction-root.yaml"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"skip_terraform_by_renovate: true\n")),(0,o.kt)("p",null,"Then ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform plan")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform apply")," are skipped in pull requests by Renovate."),(0,o.kt)("p",null,"This is useful to update dependencies which are unrelated to the result of ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform plan")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform apply"),"."),(0,o.kt)("p",null,"But you should run ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform plan")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform apply")," when Terraform or Terraform Providers are updated by Renovate.\nSo please set ",(0,o.kt)("inlineCode",{parentName:"p"},"renovate_terraform_labels")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"tfaction-root.yaml")," and ",(0,o.kt)("a",{parentName:"p",href:"https://docs.renovatebot.com/configuration-options/#addlabels"},"addLabels")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"renovate.json"),"."),(0,o.kt)("p",null,"e.g."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"renovate_terraform_labels:\n- terraform\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "packageRules": [\n    {\n      "matchManagers": ["terraform", "terraform-version"],\n      "addLabels": ["terraform"]\n    },\n    {\n      "matchPackageNames": ["hashicorp/terraform"],\n      "addLabels": ["terraform"]\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"The second rule is required if you manage Terraform with ",(0,o.kt)("a",{parentName:"p",href:"https://aquaproj.github.io/"},"aqua"),"."),(0,o.kt)("p",null,"If any one of labels in ",(0,o.kt)("inlineCode",{parentName:"p"},"renovate_terraform_labels")," is set to the pull request, tfaction would run ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform plan")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform apply"),"."))}m.isMDXComponent=!0}}]);