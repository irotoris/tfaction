"use strict";(self.webpackChunktfaction=self.webpackChunktfaction||[]).push([[6840],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},f="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),f=u(r),m=a,d=f["".concat(p,".").concat(m)]||f[m]||s[m]||l;return r?n.createElement(d,o(o({ref:t},c),{},{components:r})):n.createElement(d,o({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[f]="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5582:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const l={sidebar_position:80},o="Apply safely with Terraform Plan File",i={unversionedId:"feature/plan-file",id:"feature/plan-file",title:"Apply safely with Terraform Plan File",description:"Apply safely with Terraform Plan file created by Pull Request.",source:"@site/docs/feature/plan-file.md",sourceDirName:"feature",slug:"/feature/plan-file",permalink:"/tfaction/docs/feature/plan-file",editUrl:"https://github.com/suzuki-shunsuke/tfaction-docs/edit/main/docs/feature/plan-file.md",tags:[],version:"current",sidebarPosition:80,frontMatter:{sidebar_position:80},sidebar:"tutorialSidebar",previous:{title:"Notify the result of terraform plan and apply with tfcmt",permalink:"/tfaction/docs/feature/tfcmt"},next:{title:"Update related pull requests automatically when the base branch is updated",permalink:"/tfaction/docs/feature/auto-update-related-prs"}},p=[],u={toc:p};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"apply-safely-with-terraform-plan-file"},"Apply safely with Terraform Plan File"),(0,a.kt)("p",null,"Apply safely with Terraform Plan file created by Pull Request."),(0,a.kt)("p",null,"tfaction's Workflow"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"terraform plan")," is run in the Pull Request CI"),(0,a.kt)("li",{parentName:"ol"},"you check the plan result"),(0,a.kt)("li",{parentName:"ol"},"apply the result by merging the pull request")),(0,a.kt)("p",null,"In this case, it is important to apply the same result as the result of ",(0,a.kt)("inlineCode",{parentName:"p"},"terraform plan")," of the pull request CI.\nOtherwise, unexpected changes may be applied."),(0,a.kt)("p",null,"tfaction stores the latest Terraform Plan files to the AWS S3 or Google Cloud Storage bucket per pull request and working directory, and downloading them when ",(0,a.kt)("inlineCode",{parentName:"p"},"terraform apply")," is run."))}c.isMDXComponent=!0}}]);