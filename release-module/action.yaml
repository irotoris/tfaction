name: Release Terraform Module
description: Release Terraform Module
inputs:
  module_path:
    description: 'Module path'
    required: true
  version:
    description: 'module version'
    required: true
  github_token:
    description: 'GitHub Access Token'
    required: false
    default: ${{ github.token }}
runs:
  using: composite
  steps:
    - uses: suzuki-shunsuke/tfaction/set-env@main
    - run: |
        echo "::error ::module_path is required"
        exit 1
      shell: bash
      if: inputs.module_path == ''
    - run: |
        echo "::error ::version is required"
        exit 1
      shell: bash
      if: inputs.version == ''
    - run: |
        if ! [ -d "$MODULE_PATH" ]; then
          echo "::error ::module_path is invalid. $MODULE_PATH isn't found"
          exit 1
        fi
      shell: bash
      env:
        MODULE_PATH: ${{inputs.module_path}}

    - run: |
        module_name=${MODULE_PATH/\//_}
        echo "::set-output name=tag::module_${module_name}_${{inputs.version}}"
      id: get-tag
      shell: bash
      env:
        MODULE_PATH: ${{inputs.module_path}}
    - run: gh api "repos/{owner}/{repo}/git/refs" -f "sha=${GITHUB_SHA}" -f "ref=refs/tags/${{steps.get-tag.outputs.tag}}"
      shell: bash
      env:
        GITHUB_TOKEN: ${{inputs.github_token}}

    - run: |
        note="module: $MODULE_PATH
        version: $MODULE_VERSION

        [Source code](https://github.com/$GITHUB_REPOSITORY/tree/${{steps.get-tag.outputs.tag}}/$MODULE_PATH)
        [Versions](https://github.com/$GITHUB_REPOSITORY/releases?q=$MODULE_PATH)"
        gh release create "${{steps.get-tag.outputs.tag}}" --title "${{steps.get-tag.outputs.tag}}" -n "${note}"
      shell: bash
      env:
        GITHUB_TOKEN: ${{inputs.github_token}}
        MODULE_PATH: ${{inputs.module_path}}
        MODULE_VERSION: ${{inputs.version}}
